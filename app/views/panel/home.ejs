<%- include('components/header.ejs') %>

    <div class="main">
        <h4>
            <img src="<%= userLoggedIn.profilePic %>" class="profile-photo"> &nbsp;
            Welcome, <%= `${userLoggedIn.username}` %>
        </h4>
        <hr />
        <table width="100%">
            <form method="post">
                <tr>
                    <td>
                        <textarea name="post" class="form-control" style="width:100%;" placeholder="What's happening?"
                            maxlength="500"></textarea>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="row" style="min-height: 0;">
                            <div class="col-10">
                                <b id="message" style="position: relative; top: 10px;"></b>
                            </div>
                            <div class="col-2 " style="padding-right: 0;">
                                <button type="submit" class="mt-2 btn btn-info float-right">Submit</button>
                            </div>
                        </div>
                    </td>
                </tr>
            </form>
        </table>
    </div>

    <div class="posts" id="myPosts">

        <message></message>

    </div>

    <script>
        let form = document.querySelector('form')
        let textarea = document.querySelector('textarea')
        let button = document.querySelector('button[type=submit]')
        let posts = document.querySelector('#myPosts')

        function post() {
            let myHeaders = new Headers();
            myHeaders.append("Content-Type", "application/json");

            let raw = JSON.stringify({
                "posts": textarea.value
            });

            let requestOptions = {
                method: 'POST',
                headers: myHeaders,
                body: raw,
                redirect: 'follow'
            };

            fetch("/api/posts", requestOptions)
                .then(response => response.text())
                .then(result => {
                    message.classList.add('text-success')
                    message.style = 'opacity:1; transition: opacity 0.1s;'
                    message.innerText = 'your post has been posted'
                    setTimeout(() => {
                        message.style = 'opacity:0;'
                    }, 3000)
                    textarea.value = ''
                })
                .catch(err => {
                    message.classList.add('text-danger')
                    message.innerText = 'an error ocurred'
                    console.log(err)
                });
        }

        function buttonHandle() {
            if (textarea.value == '') {
                button.disabled = true;
            } else {
                button.disabled = false;
            }

        }

        buttonHandle()

        form.onsubmit = e => { e.preventDefault() }

        textarea.onkeyup = e => {

            buttonHandle()
        }

        button.onclick = () => {
            post()
        }

        // ----------------------------------------------- display posts
        async function getPosts() {

            var myHeaders = new Headers();
            myHeaders.append("Content-Type", "application/json");

            var requestOptions = {
                method: 'GET',
                headers: myHeaders,
                redirect: 'follow'
            };

            fetch("/api/posts", requestOptions)
                .then(response => response.json())
                .then(result => {
                    filterPostResults(result)
                })
                .catch(error => console.log('error', error));
        }

        function filterPostResults(posts) {

            if (posts.length == 0) {
                document.querySelector('message').innerText = 'Nothing to show.'
            }

            // filter if user not exists
            posts.filter(post => {
                if (posts.postedBy === undefined) {
                    return console.error('User object not populated')
                }
            })

            createPostHtml(posts)

            console.log(posts)

        }

        function timeDifference(current, previous) {

            var msPerMinute = 60 * 1000;
            var msPerHour = msPerMinute * 60;
            var msPerDay = msPerHour * 24;
            var msPerMonth = msPerDay * 30;
            var msPerYear = msPerDay * 365;

            var elapsed = current - previous;

            if (elapsed < msPerMinute) {
                if(elapsed/1000 < 30) return "Just now";
                return Math.round(elapsed / 1000) + ' seconds ago';
            }

            else if (elapsed < msPerHour) {
                return Math.round(elapsed / msPerMinute) + ' minutes ago';
            }

            else if (elapsed < msPerDay) {
                return Math.round(elapsed / msPerHour) + ' hours ago';
            }

            else if (elapsed < msPerMonth) {
                return Math.round(elapsed / msPerDay) + ' days ago';
            }

            else if (elapsed < msPerYear) {
                return Math.round(elapsed / msPerMonth) + ' months ago';
            }

            else {
                return Math.round(elapsed / msPerYear) + ' years ago';
            }
        }

        function createPostHtml(myPosts) {

            myPosts.forEach(post => {
                posts.innerHTML += `
                <article>
            <p style="padding-bottom: 10px;">
                ${post.content}
            </p>
            <hr>
            <div class="footer">
                <div class="float-left">
                    <div class="details">
                        <a href="" title="post author"> 
                            <div class="user-profile-photo" style="display:inline;">
                                <img src="${post.postedBy.profilePic}" width="15px" height="15px" style="border-radius:50%;" />
                            </div>
                            @${post.postedBy.username} 
                        </a>
                        &nbsp;
                        â‹… 
                        <span title="${new Date(post.createdAt).toLocaleString("pt-br")}">${timeDifference(new Date(), new Date(post.createdAt))}</span>
                    </div>
                </div>

                <actions>
                    <li>
                        <a href="" title="like"><i class="far fa-heart"></i></a>
                    </li>
                    <li>
                        <a href="" title="comments"><i class="fas fa-comments"></i></a>
                    </li>
                    <li>
                        <a href="" title="share"><i class="fas fa-share"></i></a>
                    </li>
                </actions>
            </div>
            <div style="clear: both;"></div>
        </article>
        `
            })
        }

        window.onload = () => {

            getPosts()

        }

    </script>

    <%- include('components/footer.ejs') %>